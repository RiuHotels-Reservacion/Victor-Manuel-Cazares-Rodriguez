var gm = "";
var app = angular.module("riuApp", [ "LocalStorageModule", "angular.filter", "ngSanitize", "ngAnimate", "ngDialog","ngTable","ui.bootstrap", "ngCookies", "ngMap"])
	.controller("ctrlMacroDestino", ["$scope","$http","localStorageService", "riuService", "$sce", "$filter", "$rootElement", "filterFilter", ctrlMacroDestino])
	.controller("ctrlChangeNames", ["$scope","$http","localStorageService", "riuService", "$sce", ctrlChangeNames])
	.controller("ctrlChangeNames", ["$scope","$http","localStorageService", "riuService", "$sce", ctrlChangeNames])
	.controller("ctrlLanding", ["$scope","$http","localStorageService", "riuService", "$sce", "$filter", "$rootElement", ctrlLanding])
	.controller("ctrlHeader", ["$scope", "$http", "riuService", "riuclassService", "constantes", "ngDialog", "$location", ctrlHeader])
	.config(function($locationProvider) {
	//$locationProvider.html5Mode(true).hashPrefix('/');
		$locationProvider.html5Mode({
			enabled: true,
			requireBase: false,
			rewriteLinks  : false
		})
})	
.config(function($httpProvider) {
	$httpProvider.defaults.timeout = 20000;
	//$httpProvider.defaults.headers.common.idioma = 'es'; 
});
app.directive('onLastRepeat', function() {
        return function(scope, element, attrs) {
            setTimeout(function(){
                scope.$emit('onRepeatLast', element, attrs);
            }, 1);
        };
    });	
app.directive('animateOnLoad',['$animateCss', function($animateCss) {
  return {
    'link': function(scope, element) {
      $animateCss(element, {
          'event': 'enter',
           structural: true
      }).start();
    }
  };
}]); 
app.directive('slick', ['$timeout',
  function ($timeout) {
    return { 
      restrict: 'AEC',
      scope: {
        initOnload: '@',
        data: '=',
        currentIndex: '=',
        accessibility: '@',
        adaptiveHeight: '@',
        arrows: '@',
        asNavFor: '@',
        appendArrows: '@',
        appendDots: '@',
        autoplay: '@',
        autoplaySpeed: '@',
        centerMode: '@',
        centerPadding: '@',
        cssEase: '@',
        customPaging: '&',
        dots: '@',
        draggable: '@',
        easing: '@',
        fade: '@',
        focusOnSelect: '@',
        infinite: '@',
        initialSlide: '@',
        lazyLoad: '@',
        onBeforeChange: '&',
        onAfterChange: '&',
        onInit: '&',
        onReInit: '&',
        onSetPosition: '&',
        pauseOnHover: '@',
        pauseOnDotsHover: '@',
        responsive: '=',
        rtl: '@',
        slide: '@',
        slidesToShow: '@',
        slidesToScroll: '@',
        speed: '@',
        swipe: '@',
        swipeToSlide: '@',
        touchMove: '@',
        touchThreshold: '@',
        useCSS: '@',
        variableWidth: '@',
        vertical: '@',
        prevArrow: '@',
        nextArrow: '@'
      },
      link: function (scope, element, attrs) {
      	//jQuery.noConflict();
        var destroySlick, initializeSlick, isInitialized;
        destroySlick = function () {
          return $timeout(function () {
            var slider;
            slider = element;
            slider.slick('unslick');
            slider.find('.slick-list').remove();
            return slider;
          });
        };
        initializeSlick = function () {
          return $timeout(function () {
            var currentIndex, customPaging, slider;
            slider = element;
            if (scope.currentIndex != null) {
              currentIndex = scope.currentIndex;
            }
            customPaging = function (slick, index) {
              return scope.customPaging({
                slick: slick,
                index: index
              });
            };
            slider.slick({
              accessibility: scope.accessibility !== 'false',
              adaptiveHeight: scope.adaptiveHeight === 'true',
              arrows: scope.arrows !== 'false',
              asNavFor: scope.asNavFor ? scope.asNavFor : void 0,
              appendArrows: scope.appendArrows ? $(scope.appendArrows) : element,
              appendDots: scope.appendDots ? $(scope.appendDots) : element,
              autoplay: scope.autoplay === 'true',
              autoplaySpeed: scope.autoplaySpeed != null ? parseInt(scope.autoplaySpeed, 10) : 3000,
              centerMode: scope.centerMode === 'true',
              centerPadding: scope.centerPadding || '50px',
              cssEase: scope.cssEase || 'ease',
              customPaging: attrs.customPaging ? customPaging : void 0,
              dots: scope.dots === 'true',
              draggable: scope.draggable !== 'false',
              easing: scope.easing || 'linear',
              fade: scope.fade === 'true',
              focusOnSelect: scope.focusOnSelect === 'true',
              infinite: scope.infinite !== 'false',
              initialSlide: scope.initialSlide || 0,
              lazyLoad: scope.lazyLoad || 'ondemand',
              beforeChange: attrs.onBeforeChange ? scope.onBeforeChange : void 0,
              onReInit: attrs.onReInit ? scope.onReInit : void 0,
              onSetPosition: attrs.onSetPosition ? scope.onSetPosition : void 0,
              pauseOnHover: scope.pauseOnHover !== 'false',
              responsive: scope.responsive || void 0,
              rtl: scope.rtl === 'true',
              slide: scope.slide || 'div',
              slidesToShow: scope.slidesToShow != null ? parseInt(scope.slidesToShow, 10) : 1,
              slidesToScroll: scope.slidesToScroll != null ? parseInt(scope.slidesToScroll, 10) : 1,
              speed: scope.speed != null ? parseInt(scope.speed, 10) : 300,
              swipe: scope.swipe !== 'false',
              swipeToSlide: scope.swipeToSlide === 'true',
              touchMove: scope.touchMove !== 'false',
              touchThreshold: scope.touchThreshold ? parseInt(scope.touchThreshold, 10) : 5,
              useCSS: scope.useCSS !== 'false',
              variableWidth: scope.variableWidth === 'true',
              vertical: scope.vertical === 'true',
              prevArrow: scope.prevArrow ? $(scope.prevArrow) : void 0,
              nextArrow: scope.nextArrow ? $(scope.nextArrow) : void 0
            });
            slider.on('init', function (sl) {
              if (attrs.onInit) {
                scope.onInit();
              }
              if (currentIndex != null) {
                return sl.slideHandler(currentIndex);
              }
            });
            slider.on('afterChange', function (event, slick, currentSlide, nextSlide) {
              if (scope.onAfterChange) {
                scope.onAfterChange();
              }
              if (currentIndex != null) {
                return scope.$apply(function () {
                  currentIndex = currentSlide;
                  return scope.currentIndex = currentSlide;
                });
              }
            });
            return scope.$watch('currentIndex', function (newVal, oldVal) {
              if (currentIndex != null && newVal != null && newVal !== currentIndex) {
                return slider.slick('slickGoTo', newVal);
              }
            });
          });
        };
        if (scope.initOnload) {
          isInitialized = false;
          return scope.$watch('data', function (newVal, oldVal) {
            if (newVal != null) {
              if (isInitialized) {
                destroySlick();
              }
              initializeSlick();
              return isInitialized = true;
            }
          });
        } else {
          return initializeSlick();
        }
      }
    };
  }
]);
app.directive('clickOutside', ['$document', '$parse', '$timeout',  function($document, $parse, $timeout) {
    return {
        restrict: 'A',
        link: function($scope, elem, attr) {
            $timeout(function() {
                var classList = (attr.outsideIfNot !== undefined) ? attr.outsideIfNot.split(/[ ,]+/) : [],
                    fn;
                function eventHandler(e) {
                    var i, element, r, id, classNames, l;
                    if (angular.element(elem).hasClass("ng-hide")) { return; }
                    if (!e || !e.target) { return; }
                    for (element = e.target; element; element = element.parentNode) {
                        if (element === elem[0]) { return; }
                        id = element.id,
                        classNames = element.className,
                        l = classList.length;
                        if (classNames && classNames.baseVal !== undefined) {
                            classNames = classNames.baseVal;
                        }
                        if (classNames || id) {
                            for (i = 0; i < l; i++) {
                                r = new RegExp('\\b' + classList[i] + '\\b');
                                if ((id !== undefined && id === classList[i]) || (classNames && r.test(classNames))) { return; }
                            }
                        }
                    }
                    $timeout(function() {
                        fn = $parse(attr['clickOutside']);
                        fn($scope, { event: e });
                    });
                }
                if (_hasTouch()) { $document.on('touchstart', eventHandler); }
                $document.on('click', eventHandler);
				$scope.$on('$destroy', function() {
                    if (_hasTouch()) { $document.off('touchstart', eventHandler); }
                    $document.off('click', eventHandler);
                });
                function _hasTouch() {
                    return 'ontouchstart' in window || navigator.maxTouchPoints;
                };
            });
        }
    };
}]);
app.directive('dynamic', function ($compile) {
  return {
    restrict: 'A',
    replace: true,
    link: function (scope, ele, attrs) {
      scope.$watch(attrs.dynamic, function(html) {
        ele.html(html);
        $compile(ele.contents())(scope);
      });
    }
  };
});
app.directive('ngDatepicker', ['$document', function ($document, riuService) {
    return {
        require : 'ngModel',
		restrict: 'EA',
		scope: {
			config : "="
        },
        link : function (scope, element, attrs, ngModelCtrl) {
					//console.log("attrs:");
			//console.log(attrs.ngValue);
			var value = attrs.ngValue;
					//console.log(attrs.ngModel);
			scope.$watch("config", function(newValue) {
				console.log(newValue)
				if (!angular.isUndefined(scope.config)) {
					var defaultDate = scope.config.defaultDate;
					console.log( "ngDatepicker -> '" + defaultDate + "'" );
					if (!angular.isUndefined(value)) {
						defaultDate = value;
					}
					console.log( "ngDatepicker -> '" + defaultDate + "'");
					if (angular.isUndefined(scope.config.maxdate)) { scope.config.maxdate = ""; }
					if (angular.isUndefined(scope.config.mindate)) { scope.config.mindate = ""; }
					if (angular.isUndefined(scope.config.yearRange)) { scope.config.yearRange = "-110:+10"; }
					//console.log(scope.config.yearRange);
					// No hacemos el cambio de formato de fecha según el mercado
					if (angular.isUndefined(scope.config.localeForzada)) {
						scope.config.formato = "dd/mm/yy";
					}
					if (angular.isDefined(scope.config.localeForzada) && scope.config.localeForzada) {
						scope.config.formato = "dd/mm/yy";
					}
				    element.datepicker({
						showOn:"both",
						defaultDate:defaultDate,
						changeYear:scope.config.changeYear,
						changeMonth:scope.config.changeMonth,
						monthNames: scope.config.meses,
						monthNamesShort: scope.config.meses,
						dayNamesMin: scope.config.diasCortos,
						dateFormat:scope.config.formato,
						//altField: "#alternate",
						//altFormat:"dd/mm/yy",
						firstDay: scope.config.primer,
						maxDate: scope.config.maxdate,
						minDate: scope.config.mindate,
						yearRange: scope.config.yearRange,
						onSelect:function (dateText, inst) {
							ngModelCtrl.$setViewValue(dateText);
							scope.$apply();
						}
					});
					//element.datepicker("setDate", defaultDate);
				}
				//}
				//datepickerFormat() ;
			});
            //});
        }
    }
}]);
app.factory('riuService', function($q, constantes, $http, localStorageService, ngDialog, $location, $cookies, $rootScope) {
   return {
	getXMLgrupos: function(idHotel) {
		var defer = $q.defer();
		if (angular.isUndefined($rootScope.gruposXML)) {
			$rootScope.gruposXML = [];
			var url = constantes.serverS + "/json-utils!getDestinosHotelesGrupos.action?formato=json&v=web2017&idioma=" + constantes.idioma;
			$http.get(url, {withCredentials: true}).success(function(data) {
				//console.log(data);
				$rootScope.gruposXML = data;
				$rootScope.$emit('gruposXML', data);
				defer.resolve($rootScope.gruposXML);
			}).error(function(data, status, headers, config) {
				defer.resolve(status);
			});
		}
		else {
			if ($rootScope.gruposXML.length == 0) $rootScope.$on('gruposXML', function(event, data) { defer.resolve(data) });
			else defer.resolve($rootScope.gruposXML);
		}
		return defer.promise;
	},
	masonryLoad : function(){ 
		$('.destination-grid').masonry({
		  columnWidth: '.grid-sizer',
		  itemSelector: '.grid-item',
		  percentPosition: true 
		});
	},
	masonryLoadOffer : function(){ 
		$('.offer-grid').masonry({
		  columnWidth: '.grid-sizer',
		  itemSelector: '.grid-item',
		  percentPosition: true 
		});
	},
	getFotosHotelJSON: function(id, json) {
		if (json=='') {return true;}
		var defer = $q.defer();
		var servicio = constantes.serverS +  "/json-utils!getUrl.action?formato=json&v=web2017&params.file="+json+"&params.idRumbo="+id;
		if (angular.isUndefined( $rootScope.fotosHotel ) )
			$rootScope.fotosHotel = [];
		if (angular.isUndefined( $rootScope.fotosHotel[id] )) {			
			$http.get(servicio, 
			{withCredentials: true } ).success(function(data)
			{
				$rootScope.fotosHotel[id] = data;
				defer.resolve(data);
			}).error(function(data, status, headers, config) 
			{
				defer.resolve(status);
			});
		}else {
			defer.resolve($rootScope.fotosHotel[id]);
		}
		return defer.promise;
	},
	getHotelTripadvisor: function(hotel) {
		var textoCompleto 	= true;
		var url 			= "https://api.tripadvisor.com/api/partner/2.0/location/" + hotel
								+ "?key=" + '48d59a13-fa3b-49c9-8b05-191ae0e4f5f0'//constantes.keyTripadvisor 
								+ "&lang=" + 'es'//constantes.idioma 
								+ "&currency=" + 'eur'//constantes.moneda 
								+ "&fulltext=" + textoCompleto;
		var defer = $q.defer();
		$http.get(url, {withCredentials: true} )
			.success(function(data)	{ defer.resolve(data); })	
			.error(function(data, status, headers, config) { defer.resolve(status); });
		return defer.promise;
	},
   	showErrorMsg : function(msg) {
		return ngDialog.open({
				template: '	<div class="alert alert-danger" role="alert"><p ng-bind="msg"></p><p ng-bind-html="ngDialogData.msg"></p></div>',
				plain : true,
				data: {msg : msg}
		});
	},
	showPoliticas : function() {
            var url = constantes.idioma + "/PaginasFinales/2017_politicas.json";
            var servicio = constantes.serverS + "/json-utils!getUrl.action?formato=json&v=web2017&params.url=/" + url;
            window.open(constantes.serverS + '/privacy', '_blank');
            /*$http.get(servicio,
                {withCredentials: true}).success(function (data) {
                //defer.resolve(data);
                ngDialog.open({
                    template: '\
							</newsletter-popup-toast>\
							<div class="clear inner-content-single">\
								<div class="modal-title">\
									<h4>{{ngDialogData.info.titulo}}</h4>\
								</div>\
								<div class="modal-content">\
									<p ng-bind-html="ngDialogData.info.descripcion"></p>\
								</div>\
							</div>',
                    plain: true, data: {info: data}
                });
            }).error(function (data, status, headers, config) {
            });*/
	},
	showPoliticasCookies : function() {
		var url = constantes.idioma + "/PaginasFinales/2017_politicas.json";
		var servicio = constantes.serverS +  "/json-utils!getUrl.action?formato=json&v=web2017&params.url=/"+url;
		$http.get(servicio, 
			{withCredentials: true } ).success(function(data)
			{
				ngDialog.open({
						template: '	</newsletter-popup-toast><div class="clear inner-content-single"><div class="modal-title"><h4>{{ngDialogData.info.titulo}}</h4></div><div class="modal-content"><p ng-bind-html="ngDialogData.info.descripcion"></p></div></div>',
						plain : true, data: { info : data},
					    controller : function($scope) {
							$scope.$on('ngDialog.opened', function (e, $dialog) {
								$scope.$apply();
								if ($(".cookies").offset()) {
									var x = $(".cookies").offset().top-50;
									var dif = window.pageYOffset;
									$(".ngdialog-theme-default").animate({scrollTop: x-dif}, 100);
								} 
							});
						}
				});	
			}).error(function(data, status, headers, config) 
			{
			});
	},
	showTerminos : function() {
		var url = constantes.idioma + "/PaginasFinales/2017_terminos.json";
		var servicio = constantes.serverS +  "/json-utils!getUrl.action?formato=json&v=web2017&params.url=/"+url;
		$http.get(servicio, 
			{withCredentials: true } ).success(function(data)
			{
				//defer.resolve(data);
				ngDialog.open({
						template: '	</newsletter-popup-toast><div class="clear inner-content-single"><div class="modal-title"><h4>{{ngDialogData.info.titulo}}</h4></div><div class="modal-content"><p ng-bind-html="ngDialogData.info.descripcion"></p></div></div>',
						plain : true, data: { info : data}
				});	
			}).error(function(data, status, headers, config) 
			{
			});
	},
	goPolCookies : function() {
   		window.open('/cookies-policy', '_blank');
 	},
   	showLoadingBuscador : function(msg) {
		return ngDialog.open({ 
				template: constantes.serverS+"/"+constantes.idioma+constantes.templateFolder+"/cmp-hm-buscar.jsp",
			    showClose: false,
				closeByDocument: false,
				closeByEscape: false,
				className: 'ngdialog-theme-loading',
				controller: ['$scope', function($scope) {
					$scope.msg = msg;
			    }]
		});
	},
	setDestinoVisto: function(id_destino, iso_pais, id_hotel) {
		var c = $cookies.getObject('dv');
		var visitas = [];	
		var d = -1;
		var ts = Math.floor(Date.now() / 1000);
		if (angular.isDefined(c))
		{
			visitas = JSON.parse($cookies.getObject('dv'));
			var d = _.findIndex(visitas, { 'id_unico': id_destino } );
		}
		if (d >= 0)	{
			visitas[d].v++;
			visitas[d]["tm"] = ts;
		}
		else {
			visitas.push({"id_unico" : id_destino, "v" : 1, "iso" : iso_pais, "tm" : ts});
		};
		var expireDate = new Date();
		expireDate.setDate(expireDate.getDate() + 10);
		// Guardamos las últimas 10 visitas
		visitas = _.orderBy(visitas, ['tm'], ['desc']);
		visitas = _.take(visitas, 10);
		$cookies.putObject('dv', JSON.stringify(visitas), {path: "/", expires: expireDate});
		var urlD = constantes.serverS +  "/json-utils!hcb.action?formato=json&v=web2017&params.lh=destino-vst:"+id_destino;
		$http.get(urlD, {withCredentials: true} );
		if (typeof id_hotel !== 'undefined') { 
			var urlH = constantes.serverS +  "/json-utils!hcb.action?formato=json&v=web2017&params.lh=hotel-vst:"+id_hotel;
			$http.get(urlH, {withCredentials: true} );
		}
	},
	setPrecioDesde : function(listaHoteles) {
		var defer = $q.defer();
		function setPrice(lh) {
			var idPub = ""
			if ( angular.isDefined(ofertas) && angular.isDefined(ofertas[0]) )
			{
				idPub = ofertas[0][2].split("-")[0] + "-";   
			}
			angular.forEach(lh, function(hotel) {
				var list = _.filter(ofertas, {'2': idPub + hotel.URI.split("-")[1]} );
				var ofe = _.minBy(list, function(o){return parseInt(o[1]);});
				if (angular.isDefined(ofe))
				{
					hotel["precio"] = parseInt(ofe[1]);
					hotel["moneda"] = ofe[3];
				}
			}); 
		}
		if ( angular.isUndefined(window.ofertas) ) {
			/*$.getScript("/macroHotelesJsOfertas.do", function (data, status) {
				setPrice(listaHoteles);		
				defer.resolve("OK");	
			});	*/
$.getScript( "/macroHotelesJsOfertas.do" )
  .done(function( script, textStatus ) {
				setPrice(listaHoteles);		
				defer.resolve("OK");	
  })
  .fail(function( jqxhr, settings, exception ) {
    defer.resolve("NOK");
window.ofertas = [];
});
		}
		else {
			setPrice(listaHoteles);
			defer.resolve("OK");
		}
		return defer.promise;
	},
     sendHomeRedirect: function() {
		window.location.href = "/" + constantes.idioma + "/";
		},
	getServer : function() {
		return ($location.protocol() == "http" ? constantes.server : constantes.serverS );
	},
     getDestinosHoteles: function() {
	var cache = {"date" : "", "data" : "" };
	var d = new Date();
	var reload = false;
	var urlDest = constantes.serverS + "/destinos-hoteles!completo.action?formato=json&idioma="+constantes.idioma+"&request.aspect=desk";
	var defer = $q.defer();
	if (angular.isUndefined($rootScope.destinoshotelesXML)) {
		$rootScope.destinoshotelesXML = [];
		if (localStorageService.isSupported) {
			cache = localStorageService.get('dh.'+constantes.idioma);
			if (cache == null) {
				reload = true;
			}
			else
			{
				var dcache = new Date();
				dcache.setTime( cache.date + constantes.cache_expiration );
				//console.log("d" + d.getTime());
				if (dcache < d.getTime())
				{
					// cache caducada
					reload = true;
				}
				else {
					// recuperamos los datos de la cache
					$rootScope.destinoshotelesXML = cache.data;
					$rootScope.$emit('destinoshotelesXML', cache.data);
					defer.resolve(cache.data);
				}
			}
		}
		else { reload = true; }
		if (reload)
		{
			cache = {"date" : "", "data" : "" };
			$http.get(urlDest,  {withCredentials: true}).success(function(data)
			{
				angular.forEach( data.PAIS, function(pais) {
					angular.forEach( pais.DESTINO, function(destino) {
						angular.forEach( destino.HOTEL, function(hotel) {
							delete hotel.HABITACIONES;
							//console.log(hotel);
						});
					});
				});
				cache["date"] = d.getTime();
				cache["data"] = data;
				if (localStorageService.isSupported) {
					angular.forEach( localStorageService.keys(), function(key) {
						if ((key != 'dh.'+constantes.idioma)&&(key.indexOf('dh.')==0))
							localStorageService.remove(key);
					});
					localStorageService.set('dh.'+constantes.idioma, cache);
				}
				$rootScope.destinoshotelesXML = data;
				$rootScope.$emit('destinoshotelesXML', data);
				defer.resolve(data);
	    		}).error(function(data, status, headers, config)
			{
			});
		}
	}
	else {
		if ($rootScope.destinoshotelesXML.length == 0) $rootScope.$on('destinoshotelesXML', function(event, data) { defer.resolve(data) });
		else defer.resolve($rootScope.destinoshotelesXML);
	}
	return defer.promise;
     },
     getDestinosHotelesSimple: function() {
		var cache = {"date" : "", "data" : "" };
		var d = new Date();
		var reload = false;
		var urlDest = constantes.serverS + "/destinos-hoteles!filtrado.action?formato=json&v=web2017&idioma="+constantes.idioma+"&request.aspect=desk";
		var defer = $q.defer();
		if (angular.isUndefined($rootScope.filtradoXML)) {
			$rootScope.filtradoXML = [];
			if (localStorageService.isSupported) {
				cache = localStorageService.get('dhs.'+constantes.idioma);
				if (cache == null) {
					reload = true;
				} else {
					var dcache = new Date();
					dcache.setTime( cache.date + constantes.cache_expiration );
					//console.log("d" + d.getTime());
					if (dcache < d.getTime()){
						// cache caducada
						reload = true;
					} else {
						// recuperamos los datos de la cache
						$rootScope.filtradoXML = cache.data;
						$rootScope.$emit('filtradoXML', cache.data);
						defer.resolve(cache.data);
					}
				}
			} else { 
				reload = true; 
			}
			if (reload) {
				cache = {"date" : "", "data" : "" };
				$http.get(urlDest,  {withCredentials: true}).success(function(data) {
					angular.forEach( data.PAIS, function(pais) {
						angular.forEach( pais.DESTINO, function(destino) {
							angular.forEach( destino.HOTEL, function(hotel) {
								delete hotel.HABITACIONES;
								//console.log(hotel);
							});
						});
					});
					cache["date"] = d.getTime();
					cache["data"] = data;
					if (localStorageService.isSupported) {
						angular.forEach( localStorageService.keys(), function(key) {
							if ((key != 'dhs.'+constantes.idioma)&&(key.indexOf('dhs.')==0))
								localStorageService.remove(key);
						});
						localStorageService.set('dhs.'+constantes.idioma, cache);
					}
					$rootScope.filtradoXML = data;
					$rootScope.$emit('filtradoXML', data);
					defer.resolve(data);
		    		}).error(function(data, status, headers, config) {});
			}
		}
		else {
			if ($rootScope.filtradoXML.length == 0) $rootScope.$on('filtradoXML', function(event, data) { defer.resolve(data) });
			else defer.resolve($rootScope.filtradoXML);
		}
		return defer.promise;
	},
     getDestinosURIURL: function() {
	var cache = {"date" : "", "data" : "" };
	var d = new Date();
	var reload = false;
	var urlURI = constantes.serverS + "/destinos-hoteles!infoUriUrlByIdRumbo.action?formato=json&idioma="+constantes.idioma+"&request.aspect=desk";
	var defer = $q.defer();
	if (angular.isUndefined($rootScope.uriurlXML)) {
		$rootScope.uriurlXML = [];
		if (localStorageService.isSupported) {
			cache = localStorageService.get('uu.'+constantes.idioma);
			if (cache == null) {
				reload = true;
			}
			else
			{
				var dcache = new Date();
				dcache.setTime( cache.date + constantes.cache_expiration );
				//console.log("d" + d.getTime());
				if (dcache < d.getTime())
				{
					// cache caducada
					reload = true;
				}
				else {
					// recuperamos los datos de la cache
					$rootScope.uriurlXML = cache.data;
					$rootScope.$emit('uriurlXML', cache.data);
					defer.resolve(cache.data);
				}
			}
		}
		else { reload = true; }
		if (reload)
		{
			cache = {"date" : "", "data" : "" };
			$http.get(urlURI,  {withCredentials: true}).success(function(data)
			{
				cache["date"] = d.getTime();
				cache["data"] = data;
				if (localStorageService.isSupported) {
					angular.forEach( localStorageService.keys(), function(key) {
						if ((key != 'uu.'+constantes.idioma)&&(key.indexOf('uu.')==0))
							localStorageService.remove(key);
					});
					localStorageService.set('uu.'+constantes.idioma, cache);
				}
				$rootScope.uriurlXML = data;
				$rootScope.$emit('uriurlXML', data);
				defer.resolve(data);
	    		}).error(function(data, status, headers, config)
			{
			});
		}
	}
	else {
		if ($rootScope.uriurlXML.length == 0) $rootScope.$on('uriurlXML', function(event, data) { defer.resolve(data) });
		else defer.resolve($rootScope.uriurlXML);
	}
	return defer.promise;
     },
     getCambioNombre: function() {
	var cache = {"date" : "", "data" : "" };
	var d = new Date();
	var reload = false;
	var urlCNH = constantes.serverS + "/destinos-hoteles!infoCambioNombreHotel.action?formato=json&request.aspect=desk";
	var defer = $q.defer();
	if (localStorageService.isSupported) {
		cache = localStorageService.get('cnh.'+constantes.idioma);
		if (cache == null) {
			reload = true;
		}
		else
		{
			var dcache = new Date();
			dcache.setTime( cache.date + constantes.cache_expiration );
			//console.log("d" + d.getTime());
			if (dcache < d.getTime())
			{
				// cache caducada
				reload = true;
			}
			else {
				// recuperamos los datos de la cache
				defer.resolve(cache.data);
			}
		}
	}
	else { reload = true; }
	if (reload)
	{
		cache = {"date" : "", "data" : "" };
		$http.get(urlCNH,  {withCredentials: true}).success(function(data)
		{
			cache["date"] = d.getTime();
			cache["data"] = data;
			if (localStorageService.isSupported) {
				angular.forEach( localStorageService.keys(), function(key) {
					if ((key != 'cnh.'+constantes.idioma)&&(key.indexOf('cnh.')==0))
						localStorageService.remove(key);
				});
				localStorageService.set('cnh.'+constantes.idioma, cache);
			}
			defer.resolve(data);
    		}).error(function(data, status, headers, config)
		{
		});
	}
	return defer.promise;
     },
	getDestinosHotelesAndURIURL: function() {
		return $q.all([this.getDestinosURIURL(), this.getDestinosHoteles()]).then(function(data){
			return data;
		});
	},
     getOfertasLanding: function(uri) {
	var urlOfe = constantes.serverS + "/ofertas!getOfertasLanding.action?uri="+uri+"&formato=json&tipo=flash&configuracion=ratingTA&idioma="+constantes.idioma+"&request.aspect=desk";
	var defer = $q.defer();
	$http.get(urlOfe, {withCredentials: true}).success(function(data)
		{
			defer.resolve(data);
    		}).error(function(data, status, headers, config)
		{
		});
	return defer.promise;
     },
     getPromoMacroDestino: function() {
	var urlOfe = constantes.serverS + "/ofertas!getOfertasMacro.action?formato=json&conPromociones=true&idioma="+constantes.idioma+"&request.aspect=desk";
	var defer = $q.defer();
	$http.get(urlOfe, {withCredentials: true}).success(function(data)
		{
			defer.resolve(data);
    		}).error(function(data, status, headers, config)
		{
		});
	return defer.promise;
     },
	getPaisesList: function() {
		var url = constantes.serverS + "/json-utils!getPaises.action?formato=json&idioma="+constantes.idioma+"&request.aspect=desk";
		var defer = $q.defer();
		if (angular.isUndefined($rootScope.paisesList)) {
			$rootScope.paisesList = [];
			$http.get(url, {withCredentials: true}).success(function(data)
			{
				$rootScope.paisesList = data;
				$rootScope.$emit('paisesList', data);
				defer.resolve(data);
			}).error(function(data, status, headers, config)
			{
			});
		}
		else {
			if ($rootScope.paisesList.length == 0) $rootScope.$on('paisesList', function(event, data) { defer.resolve(data) });
			else defer.resolve($rootScope.paisesList);
		}
		return defer.promise;
	},
	getProvinciasPaisList: function(pais) {
		var url = constantes.serverS + "/json-utils!getPaisEstado.action?formato=json&idioma="+constantes.idioma+"&request.aspect=desk&pais="+pais;
		var defer = $q.defer();
		if (angular.isUndefined($rootScope.provinciasPaisList)) {$rootScope.provinciasPaisList=[];}
		if (angular.isUndefined($rootScope.provinciasPaisList[pais])) {
			$rootScope.provinciasPaisList[pais] = [];
			$http.get(url, {withCredentials: true}).success(function(data)
			{
				$rootScope.provinciasPaisList[pais] = data;
				$rootScope.$emit('provinciasPaisList_'+pais, data);
				defer.resolve(data);
			}).error(function(data, status, headers, config)
			{
			});
		}
		else {
			if ($rootScope.provinciasPaisList[pais].length == 0) $rootScope.$on('provinciasPaisList_'+pais, function(event, data) { defer.resolve(data) });
			else defer.resolve($rootScope.provinciasPaisList[pais]);
		}
		return defer.promise;
	},
     getBannerFooterDefault: function() {
	var urlBanner = constantes.serverS + "/banners!getBannersFooter.action?formato=json&mercado=&idioma="+constantes.idioma+"&request.aspect=desk";
	var defer = $q.defer();
	$http.get(urlBanner, {withCredentials: true}).success(function(data)
		{
			defer.resolve(data);
    		}).error(function(data, status, headers, config)
		{
		});
	return defer.promise;
     },
	 getEtiquetas: function(etiquetas) {
		    etiquetas = escape(etiquetas);
            var url = constantes.serverS + "/json-utils!getEtiqueta.action?formato=json&tipo=mapa&listEtiquetas=" + etiquetas + "&idioma=" + constantes.idioma + "&request.aspect=desk";
            var defer = $q.defer();
            $http.get(url, {
                withCredentials: true
            }).success(function(data) {
                defer.resolve(data);
            }).error(function(data, status, headers, config) {});
            return defer.promise;
        },
     getDateTimeConfig: function() {
		var config = {};
		var defer = $q.defer();
		this.getEtiquetas( 'general.decimalSeparator,general.groupSeparator,RIU2017.home.buscador.dias-semana-tres-letras,RIU2017.home.buscador.meses-tres-letras,nueva_home.format,general.primer_dia_semana,nueva_home.meses,nueva_home.diasCortos,nueva_home.dias,RIU2017.home.buscador.entrada,RIU2017.home.buscador.salida,' + Date.now() ).then(function(d) {
			config.formato = d['nueva_home.format'];
			config.primer = d['general.primer_dia_semana'];
			config.dias = d['nueva_home.dias'];
			config.entrada = d['RIU2017.home.buscador.entrada'];
			config.salida = d['RIU2017.home.buscador.salida'];
			config.meses = d['nueva_home.meses'].replace(/\[|'|\]/g, "").split(",");
			config.diasCortos = d['nueva_home.diasCortos'].replace(/\[|'|\]/g, "").split(",");
			config.diasCortos3 = d['RIU2017.home.buscador.dias-semana-tres-letras'].replace(/\[|'|\]/g, "").split(",");
			config.mesesCortos3 = d['RIU2017.home.buscador.meses-tres-letras'].replace(/\[|'|\]/g, "").split(",");
			config.decimalSeparator = d['general.decimalSeparator'];
			config.groupSeparator = d['general.groupSeparator'];
			config.changeYear=false;
			config.changeMonth=false;
			defer.resolve(config);
		});
	return defer.promise;
     },
    replaceFormatDate: function(formatAct, toFormat){ //toFormat --> JS -> de JS a Java; JA -> de Java s JS
    	var format = '';
    	if(toFormat == 'JS'){
    		if(formatAct.indexOf("yyyy") >=0){
    			format = formatAct;
    		}else{
    			format = formatAct.replace("yy", "yyyy");
    			format = format.replace("mm", "MM");
    		}
    	}else if(toFormat == 'JA'){
    		if(formatAct.indexOf("yyyy") >=0){
    			format = formatAct.replace("yyyy", "yy");
    			format = format.replace("MM", "mm");
    		}else{
    			format = formatAct;
    		}
    	}
    	return format;
    },
    setCookie: function(nomCookie, hours, pathCookie, v){//(Nombre de la cookie, caducidad (horas), path, valor)
    	var cookieTime = hours*60*60*1000;
		date=new Date();
		date.setTime(date.getTime()+ cookieTime);
		expires="; expires="+date.toGMTString();
		document.cookie= nomCookie+"="+v+expires+"; path="+pathCookie;
	},
	getCookie: function(nomCookie){
    	return  $cookies.get(nomCookie);
	},
        adsBlocked: function (){
          let cookie = $cookies.get('mt.v'); 
        var url = "https://api.monetate.net/api/engine/v1/decide/riu.com";
        let obj = {
                "channel": "a-c3db960f/p/riu.com",
                "events": [
                    {
                        "eventType": "monetate:decision:DecisionRequest",
                        "requestId": Math.floor((Math.random() * 10000) + 1).toString()
                    },
                    {
                       "eventType": "monetate:context:UserAgent",
                       "userAgent": navigator.userAgent
                    },
                        {
                            "eventType": "monetate:context:PageView",
                            "url": window.location.host + window.location.pathname
                        }
                ]
            };
        if(cookie)
            obj["monetateId"] = cookie;
        var paramStr =  JSON.stringify(obj);
        var transform = function(data){
                return $.param(data);
            }
        return $http.post(url, JSON.stringify(obj));
    },
    SetDatalayerMoneteInfo : function(obj){
        for(var i = 0; i < obj.length; i++){
                var resp = obj[i];
                if(resp.actions && resp.actions.length > 0){
                    for(var j = 0; j < resp.actions.length; j++){
                        var act = resp.actions[j];
                        if(act.json && act.json.swiGA && act.json.swiGA == true){
                            window.dataLayer.push({
                            'event':'GAEvent',
                            'eventCategory':'Monetate',
                            'eventAction':act.json.exp,
                            'eventLabel': act.json.variante
                            });
                        }
                    }
                }
            }
    }
   }
});
function ctrlChangeNames($scope, $http, localStorageService, riuService, $sce) {
	$scope.Nombres = [];
	riuService.getCambioNombre().then(function(d) {
		$scope.Nombres = d;
	});
}
function ctrlLanding($scope, $http, localStorageService, riuService, $sce, $filter, $rootElement) {
	$scope.Ofertas = [];
	$scope.Destinos = [];
	$scope.URIURL = [];
	$scope.uriLanding = "";
	$scope.sortorder = "[pais,area,hotel]";
	$scope.from = {importe:0, modeda:''};
	$scope.Aperturas = [];
	$scope.Reformas = [];
	$scope.data = [];
	$scope.getURIURLHotel = function(ID_RUMBO){
		var hoteles = $scope.URIURL.HOTEL;
		if (!angular.isUndefined( hoteles ))
		{
			for(var i = 0; i < hoteles.length; i++)
			{
				var g = hoteles[i].ID_RUMBO;
				if(g==ID_RUMBO)
				{
					return hoteles[i];
					break;
				}
			}
		}
		return null;
	};
	$scope.setListasHoteles = function(l1, l2, l3){
		riuService.getDestinosHotelesAndURIURL().then(function(d) {
			$scope.Destinos = d[1].PAIS;
			$scope.URIURL= d[0];
			$scope.getServicios = function(){
				var p = [];
				var r = new Array();
				var listas = [];
				listas.push(l1);
				listas.push(l2);
				listas.push(l3);
				for(var ls=0 ; ls < listas.length ; ls++) {
					var paises = angular.copy($scope.Destinos);
					p = [];
				 	p = angular.copy( $scope.data[ls] );
					var list = "," + listas[ls] + ",";
					if (!angular.isUndefined( paises ) && listas[ls] != '' ){
						for(var i= paises.length-1; i >=0 ; i--) {
							if (!angular.isUndefined( paises[i].DESTINO )){
								for(var j= paises[i].DESTINO.length-1; j >= 0; j--) {
									for(var k = paises[i].DESTINO[j].HOTEL.length-1; k >= 0; k--) {
										paises[i].DESTINO[j].HOTEL[k].DESTINO = paises[i].DESTINO[j].NAME;
										paises[i].DESTINO[j].HOTEL[k].PAIS = paises[i].NAME;
										if (!angular.isUndefined( paises[i].DESTINO[j].HOTEL[k].SERVICIOS ))
										{
											var idRumbo = "," + paises[i].DESTINO[j].HOTEL[k].ID_RUMBO + ",";
											if (list.indexOf(idRumbo ) > -1)
											{
												var slista =  listas[ls];
												var alista = slista.split(",");
												var index = _.findIndex(p, 'ID_RUMBO', paises[i].DESTINO[j].HOTEL[k].ID_RUMBO );
												if (index > -1)
													p[index].ORDEN = alista.indexOf( paises[i].DESTINO[j].HOTEL[k].ID_RUMBO )
												else
												{
													paises[i].DESTINO[j].HOTEL[k].ORDEN = alista.indexOf( paises[i].DESTINO[j].HOTEL[k].ID_RUMBO );
													p.push( paises[i].DESTINO[j].HOTEL[k] );
												}
											}
										}
									}
								}
							}
						};
					};
					r[ls] = p;
				}
				return r;
			}
			$scope.data = $scope.getServicios();
		})
	}
	$scope.setServicio = function(s1, s2, s3){
		riuService.getDestinosHotelesAndURIURL().then(function(d) {
			$scope.Destinos = d[1].PAIS;
			$scope.URIURL= d[0];
			$scope.getServicios = function(){
				var paises = angular.copy($scope.Destinos);
				var p = [];
				var r = new Array();
				var servicios = [];
				servicios.push(s1);
				servicios.push(s2);
				servicios.push(s3);
				for(var s=0 ; s < servicios.length ; s++) {
						p = [];
						if (!angular.isUndefined( paises ) && servicios[s] != '' ){
							for(var i= paises.length-1; i >=0 ; i--) {
								if (!angular.isUndefined( paises[i].DESTINO )){
								for(var j= paises[i].DESTINO.length-1; j >= 0; j--) {
									for(var k = paises[i].DESTINO[j].HOTEL.length-1; k >= 0; k--) {
										paises[i].DESTINO[j].HOTEL[k].DESTINO = paises[i].DESTINO[j].NAME;
										paises[i].DESTINO[j].HOTEL[k].PAIS = paises[i].NAME;
										paises[i].DESTINO[j].HOTEL[k].ORDEN = 999;
										if (!angular.isUndefined( paises[i].DESTINO[j].HOTEL[k].SERVICIOS ))
										{
											if (paises[i].DESTINO[j].HOTEL[k].SERVICIOS.SERVICIO.indexOf(servicios[s]) > -1)
											{
												p.push( paises[i].DESTINO[j].HOTEL[k] );
											}
										}
										r.push(paises[i].DESTINO[j].HOTEL[k] );
									}
								}
							}
						};
				};
				r[s] = p;
			}
			return r;
		}
		$scope.data = $scope.getServicios();
		$scope.Aperturas = $scope.data[0];
		})
	};
	$scope.setUri = function(uri, orden){
		$scope.uriLanding = uri;
		console.log('$scope.uriLanding' + $scope.uriLanding);
		if (!angular.isUndefined(orden))
			if (orden == 'precio')
				$scope.sortorder = "impfinal";
		riuService.getOfertasLanding(uri).then(function(d) {
			$scope.Ofertas = d;
				angular.forEach($scope.Ofertas.adicionales, function (ofe) {
					ofe.impfinal = parseFloat(ofe.impfinal);
					if ($scope.from.importe == 0 || $scope.from.importe > ofe.impfinal){
						$scope.from.importe = ofe.impfinal;
						$scope.from.moneda = ofe.coddiv;
					}
				});
			console.log($scope.Ofertas);
		});
	}
}
function ctrlMacroDestino($scope, $http, localStorageService, riuService, $sce, $filter, $rootElement, filterFilter) {
	$scope.Ofertas = [];
	$scope.Destinos = [];
	$scope.Banner = [];
	$scope.Promo = [];
	$scope.Promociones = [];
	$scope.Aperturas = [];
	$scope.HotelesDestino = [];
	$scope.URIURL = [];
	$scope.Buscador = [];
	$scope.getDestinos = function (search) {
		var data = [];
		var filtered = filterFilter($scope.Buscador, search);
		var	results = _.sortByOrder(filtered, ['PAIS', 'DESTINO', 'HOTEL'], [true, true, true]);
		var dest = "";
		var pais = "";
		console.log('inicio agrupaciones');
		angular.forEach(results , function(value, key) {
			value.firstInGroup = false;
			value.showPais = false;
			if (dest == "" || dest != value.DESTINO) {
				dest = value.DESTINO;
				value.firstInGroup = true;
				console.log("DESTINO -> " +value.DESTINO);
			}
			if (pais == "" || pais != value.PAIS) {
				pais = value.PAIS;
				value.showPais = true;
				console.log("PAIS -> " + value.PAIS);
			}
		});
		return results;
	}
	$scope.submit = function(val) {
		if (!angular.isUndefined(val)) {
			window.location.assign(val);
		}
	}
	$scope.getDestino = function(ID_DESTINO){
		$scope.HotelesDestino = [];
		var paises = $scope.Destinos;
		if (!angular.isUndefined(paises ))
		{
			for(var i = 0; i < paises.length; i++)
			{
				for(var j = 0; j < paises[i].DESTINO.length; j++)
				{
					var g = paises[i].DESTINO[j].ID_UNICO;
					if(g==ID_DESTINO)
					{
						$scope.HotelesDestino.push(paises[i].DESTINO[j]);
						break;
					}
				}
			}
		}
	};
	$scope.getURIURLHotel = function(ID_RUMBO){
		var hoteles = $scope.URIURL.HOTEL;
		if (!angular.isUndefined( hoteles ))
		{
			for(var i = 0; i < hoteles.length; i++)
			{
				var g = hoteles[i].ID_RUMBO;
				if(g==ID_RUMBO)
				{
					return hoteles[i];
					break;
				}
			}
		}
		return null;
	};
	riuService.getDestinosHotelesAndURIURL().then(function(d) {
		$scope.Destinos = d[1].PAIS;
		$scope.URIURL= d[0];
		for(var i = 0; i < $scope.Destinos.length; i++)
		{
			for(var j = 0; j < $scope.Destinos[i].DESTINO.length; j++)
			{
				for(var h = 0; h < $scope.Destinos[i].DESTINO[j].HOTEL.length; h++)
				{
					$scope.Buscador.push({ "PAIS":$scope.Destinos[i].NAME,
								  "PAIS_URL":$scope.Destinos[i].URL,
								  "DESTINO": $scope.Destinos[i].DESTINO[j].NAME,
								  "DESTINO_URL": $scope.Destinos[i].DESTINO[j].URL,
								  "HOTEL":$scope.Destinos[i].DESTINO[j].HOTEL[h].NOMBRE,
								  "HOTEL_URL":$scope.Destinos[i].DESTINO[j].HOTEL[h].URL_HOTEL});
				}
			}
		}
		riuService.getPromoMacroDestino().then(function(d) {
			$scope.Ofertas = d;
			$scope.Promociones = $scope.getPromociones();
			if ($scope.Promociones.length == 0){
				riuService.getBannerFooterDefault().then(function(d) {
					$scope.Banner = d;
				});
			}
		});
		$scope.getPromociones = function(){
			var promos = [];
			var recomendadas = $scope.Ofertas.recomendadas;
			if (!angular.isUndefined(recomendadas)) {
				console.log('recomendadas');
				angular.forEach(recomendadas, function(rec) {
					for(var i = 0; i < rec.length; i++){
						if (rec[i].tipo == "promocion")
							promos.push( rec[i] );
					}
				});
			}
			return promos;
		}
		$scope.getAperturas = function(){
			var paises = angular.copy($scope.Destinos);
			if (!angular.isUndefined( paises )){
			for(var i= paises.length-1; i >=0 ; i--) {
				if (!angular.isUndefined( paises[i].DESTINO )){
				for(var j= paises[i].DESTINO.length-1; j >= 0; j--) {
					for(var k = paises[i].DESTINO[j].HOTEL.length-1; k >= 0; k--) {
						if (!$filter('isNuevaApertura')(paises[i].DESTINO[j].HOTEL[k])){
							paises[i].DESTINO[j].HOTEL.splice(k, 1);
						}
					}
					if (paises[i].DESTINO[j].HOTEL.length == 0){
						paises[i].DESTINO.splice(j, 1);
					}
				}
				if (paises[i].DESTINO.length == 0){
					paises.splice(i, 1);
				}
				}
			};
			};
			return paises;
		}
		$scope.Aperturas = $scope.getAperturas();
	});
}
function ctrlHeader($scope, $http, riuService, riuclassService, constantes, ngDialog, $location ) {
   $scope.showPopupLoginRC = function() {
		$scope.popup = riuclassService.showPopupLogin($location.absUrl());
   }	
}


app.filter('orderByContinente', function() {
  return function(Destinos) {
    var filtered = [];
    angular.forEach(Destinos, function(item) {
	var order = 0;
	if( item.ID_REGION=='AM') { order = 0}
	if( item.ID_REGION=='NA') { order = 0}
	if( item.ID_REGION=='EU') { order = 1}
	if( item.ID_REGION=='AF') { order = 2}
	if( item.ID_REGION=='AS') { order = 4}
	if( item.ID_REGION=='LC') { order = 3}
	item['ORDEN'] = order;
      filtered.push(item);
    });
    filtered.sort(function (a, b) {
      return (a.order > b.order ? 1 : -1);
    });
    return filtered;
  };
});

app.filter('substringAfter', function () {
        return function (text, c) {
		if (text.indexOf(c) > -1)
			return text.split(c)[1];
		else
			return text;	
        };
    });


app.filter('pad', function ($filter) {
        return function (str, max) {
			str = str.toString();
			return str.length < max ? $filter('pad')("0" + str, max) : str;;	
        };
    });


app.filter('formatNumber', function () {
        return function (num, f) {
			if (!angular.isUndefined(f))
			{
				if (f.length == 5)
				{
					if (f.contains(","))
						f = f + ".#";
					else
						f = f + ",#";
				}
				var res = format(f, num);
				return res;
			}
			else
			{
				return "";
			}
		}
	
});

app.filter('formatNombreDestino', function(){
		return function (destino) {
			var result  = false;
			var zonaAndalucia = '8803';
			var zonaAlgarve = '8802';
			var zonaMadeira = '8807';
			var maldivas = '204245';
			result = destino.NAME;
			if ( destino.ID_UNICO_ZONA == zonaAlgarve || destino.ID_UNICO_ZONA == zonaMadeira)
			{
				result = destino.ZONA + " - " + destino.NAME;
			}
			else if (destino.ID_UNICO_ZONA == zonaAndalucia)
			{
				result = destino.AREA + " - " + destino.NAME;
			}
			else if (destino.ID_UNICO == maldivas ) 
			{
				result = destino.AREA + " - " + destino.NAME;
			}
			return result ;	
		}	
});

app.filter('replace', function () {
        return function (text, c1, c2) {
			if (!angular.isUndefined(text))
				return  text.replace(c1, c2);
			else
				return text;
        };
    });


app.filter('getURLmovil', function () {
        return function (text) {
		return text.replace("Paises","paises_movil");	
        };
    });
	


app.filter('formatEstrellas', function(){
		return function (estrellas) {
				switch(estrellas) {
					case "3":
						return " 3*";
						break;
					case "4":
						return " 4*";
						break;
					case "5":
						return " 5*";
						break;
					default:
						return "";
				}
		}
	});
	


app.filter('is24h', function(){
		return function (hotel) {
			var result  = false;
			if (!angular.isUndefined( hotel ) && !angular.isUndefined( hotel.SERVICIOS ))
			{
				result = (hotel.SERVICIOS.SERVICIO.indexOf('Todo Incluido 24h') > -1);
			}

			return result ;	
		}
	});


app.filter('isFun4All', function(){
		return function (hotel) {
			var result  = false;
			if (!angular.isUndefined( hotel ) && !angular.isUndefined( hotel.SERVICIOS ))
			{
				result = (hotel.SERVICIOS.SERVICIO.indexOf('Fun4All') > -1);
			}

			return result ;	
		}
	});

app.filter('isNuevaApertura', function(){
		return function (hotel) {
			var result  = false;

			if (!angular.isUndefined( hotel ) && !angular.isUndefined( hotel.SERVICIOS ))
			{
				result = (hotel.SERVICIOS.SERVICIO.indexOf('Nueva Apertura') > -1);
			}
			return result ;	
		}
	});


app.filter('isDestinoTieneNuevasApertura', function(){
		return function (destino) {
			var result  = false;
			for(var i = 0; i < destino.HOTEL.length; i++)
			{

				if (!angular.isUndefined( destino.HOTEL[i].SERVICIOS ))
				{
					if (destino.HOTEL[i].SERVICIOS.SERVICIO.indexOf('Nueva Apertura') > -1) {
						result = true;
						break;
					}
				}
			}
			return result ;	
		}
	});


app.filter('isAO', function(){
		return function (hotel) {
			var result  = false;
			if (!angular.isUndefined( hotel ) && !angular.isUndefined( hotel.SERVICIOS ))
			{
				result = (hotel.SERVICIOS.SERVICIO.indexOf('Adults Only') > -1);
			}

			return result ;	
		}
	});


app.filter('isWifiFree', function(){
		return function (hotel) {
			var result  = false;
			if (!angular.isUndefined( hotel ) && !angular.isUndefined( hotel.SERVICIOS ))
			{
				result = (hotel.SERVICIOS.SERVICIO.indexOf('Wifi gratis') > -1);
			}

			return result ;	
		}
	});


app.filter('isWifi', function(){
		return function (hotel) {
			var result  = false;
			if (!angular.isUndefined( hotel ) && !angular.isUndefined( hotel.SERVICIOS ))
			{
				result = (hotel.SERVICIOS.SERVICIO.indexOf('Wifi') > -1);
			}

			return result ;	
		}
	});


app.filter('isAI', function($filter){
		return function (hotel) {
			var result  = false;
			if (!angular.isUndefined( hotel ) && !angular.isUndefined( hotel.SERVICIOS ))
			{
				//var es24h = $filter('is24h')(hotel);
				//result = ((hotel.SERVICIOS.SERVICIO.indexOf('Todo Incluido') > -1) && (!es24h));
				result = (hotel.SERVICIOS.SERVICIO.indexOf('Todo Incluido') > -1);
			}

			return result ;	
		}
	});

app.filter('isBoda', function(){
		return function (hotel) {
			var result  = false;
			if (!angular.isUndefined( hotel ) && !angular.isUndefined( hotel.SERVICIOS ))
			{
				result = (hotel.SERVICIOS.SERVICIO.indexOf('Bodas') > -1);
			}

			return result ;	
		}
	});
	
app.filter('isGolf', function(){
		return function (hotel) {
			var result  = false;
			if (!angular.isUndefined( hotel ) && !angular.isUndefined( hotel.ACTIVIDADES ))
			{
				result = (hotel.ACTIVIDADES.ACTIVIDAD.indexOf('Golf') > -1);
			}

			return result ;	
		}
	});
	
app.filter('isWellness', function(){
		return function (hotel) {
			var result  = false;
			if (!angular.isUndefined( hotel ) && !angular.isUndefined( hotel.ACTIVIDADES ))
			{
				result = (hotel.ACTIVIDADES.ACTIVIDAD.indexOf('Wellness / Spa') > -1);
			}

			return result ;	
		}
	});
	
app.filter('isPoolParty', function(){
		return function (hotel) {
			var result  = false;
			if (!angular.isUndefined( hotel ) && !angular.isUndefined( hotel.ACTIVIDADES ))
			{
				result = (hotel.ACTIVIDADES.ACTIVIDAD.indexOf('Riu Pool Party') > -1);
			}

			return result ;	
		}
	});

app.filter('isReuniones', function(){
		return function (hotel) {
			var result  = false;
			if (!angular.isUndefined( hotel ) && !angular.isUndefined( hotel.SERVICIOS ))
			{
				result = (hotel.SERVICIOS.SERVICIO.indexOf('Eventos') > -1);
			}

			return result ;	
		}
	});

app.filter('getOfeDescripcion', function(){
		return function (oferta) {
			var desc = "";
			if (!angular.isUndefined( oferta ))
			{
				if (oferta.descripcion != null)
					desc = oferta.descripcion;

				var texto_dias = oferta.texto_dias;

				if (texto_dias != null && texto_dias != ''){
					desc = desc + " ("+ texto_dias +")";
				}	
			}

			return desc;	
		}
	});
	
	
app.filter('getOfeCategoria', function($filter){
		return function (oferta) {
			if (!angular.isUndefined( oferta ))
			{
				return $filter('formatEstrellas')(oferta.categoria);
			}
		}
	});
	
app.filter('getOfeTipo', function(){
		return function (oferta) {
			var tipo = "";
			if (oferta.tipoHabitacion != null) {
				tipo = oferta.tipoHabitacion;		    						
			}
			if (oferta.regimen!= null) {
				if (tipo!="") tipo = tipo + ' + ';
				tipo = tipo + oferta.regimen;
			}	
			return tipo;
		}
	});

app.value("constantes",{
	idioma:"es",
	server:"http://www.riu.com",
	serverS:"https://www.riu.com",
	templateFolder:"/_include/templates/riu2017",
	keyTripadvisor:"03976D3889734CEF8D64DF6ABE92AD1A",
	publicFolder: "riu-class",
	privateFolder: "my-riuclass",
	cache_expiration : 600000 ,
	urlGMapKey: 'https://maps.googleapis.com/maps/api/js?v=3&key=AIzaSyDp1e9xB_ffKRdg5qJ23eYO13pblcA8MPo&sensor=false&language=' + "es"
});
<!-- The page was last published on 24/11/2020 14:27:16-->
	
	app.factory('serviceLoginLocalizador', function($http, $q, riuService, constantes){
		return  {
		}
	});
	app.component("loginLocalizador", {
			templateUrl: function(constantes) { return constantes.serverS +"/"+constantes.idioma + constantes.templateFolder + "/cmp-header-login-localizador.jsp"; }, 
			controller : ctrlLoginLocalizador
	});
	ctrlLoginLocalizador.$inject = ['$q', '$scope', '$http', '$window', 'constantes', 'riuService'];
	function ctrlLoginLocalizador($q, $scope, $http, $window, constantes, riuService)  {
		$scope.detalleReserva = {};
		$scope.Select = [];
		riuService.getDestinosHoteles().then(function(d) {
			angular.forEach(d.PAIS, function(pais) {
				angular.forEach(pais.DESTINO, function(destino) {
					angular.forEach(destino.HOTEL, function(hotel) {
						$scope.Select.push({ "ID":hotel.ID_RUMBO, "NAME":hotel.NOMBRE, "PAIS":pais.NAME });
					});
				});
			});
		});
		$scope.reservaLocalizador = function(loginLocalizadorForm) {
			if (loginLocalizadorForm.$valid) {
				var url = constantes.serverS + "/gestion-reserva!showReserva.action";
				var idHSelec = loginLocalizadorForm.idHotel.$viewValue.ID;
				var emaSelec = loginLocalizadorForm.email.$viewValue;
				var locSelec = loginLocalizadorForm.localizadorReserva.$viewValue;
				var parameter = {
					 "formato" : "json",
					 "localizadorReserva" : locSelec,
					 "idHotel" : idHSelec,
					 "email" : emaSelec
				 };
				var transform = function(data){
					return $.param(data);
				}
				$http.post( url, parameter,
						{withCredentials: false, headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},
						transformRequest: transform})
				.success(function(data)
				{
					if(data && data[0] && data[0].errorID)
						riuService.showErrorMsg(data[0].errorMensaje);
					else
						window.location.href = constantes.serverS + "/" + constantes.idioma + "/gestion-reserva.jsp?localizadorReserva="+ locSelec.toUpperCase() +"&idHotel="+ idHSelec +"&email="+ emaSelec +"&formato=json";
				})
				.error(function(data, status, headers, config)
				{
					console.info('error');
					console.info(data);
				})
			}
		}
	   $scope.formLoginLocata = {
			email: null,
			idHotel: 107,
			locata: null
		};
		$scope.mostrarReserva = function(){
			var url = constantes.serverS + '/gestion-reserva!mostrarReserva.action?v=web&localizadorReserva='+ $scope.formLoginLocata.locata +'&email='+ 			$scope.formLoginLocata.email+'&idHotel='+ $scope.formLoginLocata.idHotel;
			var defer = $q.defer();
			$http.get(url).success(function(data)
			{
				defer.resolve(data);
				console.log(data.datosReservaDto);
				}).error(function(data, status, headers, config)
			{
			});
			return defer.promise;
		};
		$scope.goLogin = function() {
			$scope.detalleReserva = $scope.mostrarReserva();
		}
	}



app.factory('serviceGTM',function(constantes,$window){var service={};service.geoip="";service.hotel;service.pais;service.destino;service.user_id="";service.setGTM=function(data){var dataLayer=window.dataLayer=window.dataLayer||[];dataLayer.push(data);}
return service;});app.component("googleTm",{bindings:{country:'@',idrc:'@',template:'@'},controller:ctrlGoogleTM});ctrlGoogleTM.$inject=['serviceTC','$scope','$http','$window','riuService','riuClassSession','$sce','constantes','$rootElement'];function ctrlGoogleTM(serviceGTM,$scope,$http,$window,riuService,riuClassSession,$sce,constantes,$rootElement){angular.element(document).ready(function(){(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})($window,document,'script','dataLayer','GTM-KHT889');});var dataLayer=window.dataLayer||[];dataLayer.push({'paisGeoIp':$scope.$ctrl.country});}

app.factory('serviceTrackings',function(constantes,$window){var service={};service.geoip="";service.hotel;service.pais;service.destino;service.user_id="";service.LightningBoltBeginsXAXIS=function(){if(typeof lbTrans=='undefined'){var lbTrans='';}
if(typeof lbValue=='undefined'){var lbValue='';}
if(typeof lbData=='undefined'){var lbData='';}
var lb_rn=new String(Math.random());var lb_rns=lb_rn.substring(2,12);var boltProtocol=('https:'==document.location.protocol)?'https://':'http://';try{var newScript=document.createElement('script');var scriptElement=document.getElementsByTagName('script')[0];newScript.type='text/javascript';newScript.id='lightning_bolt_'+lb_rns;newScript.src=boltProtocol+'b3.mookie1.com/2/LB/'+lb_rns+'@x96?';scriptElement.parentNode.insertBefore(newScript,scriptElement);scriptElement=null;newScript=null;}catch(e){}}
service.sCodeTridion=function(){$.getScript("/"+constantes.idioma+"/_JS/s_code_tridion.js",function(data,textStatus,jqxhr){});console.log('sCodeTridion');}
return service;});app.component("trackings",{bindings:{country:'@',template:'@'},controller:ctrlTrackings});ctrlTrackings.$inject=['serviceTrackings','$scope','$http','$window','riuService','riuClassSession','$sce','constantes','$rootElement'];function ctrlTrackings(serviceTrackings,$scope,$http,$window,riuService,riuClassSession,$sce,constantes,$rootElement){}
	
	app.factory('serviceTC', function(constantes, $window){
		var service = {};
			service.geoip = "";
			service.hotel;
			service.pais;
			service.destino;
			service.user_id = "";
			// TAG Commander
			service.setTC = function(tipo) {
				//$window.tc_vars = data;
				if (tipo=='newsletter') {
					$window.tc_vars = {};
					$window.tc_vars['env_template']= 'newsletter_confirmation';
				}
				else if (tipo=='hotel') {
					$window.tc_vars = {};
					$window.tc_vars['hotel_riu_id'] = service.hotel.ID_RUMBO;
					$window.tc_vars['hotel_sku_id'] = service.hotel.ID_RUMBO;
					$window.tc_vars['hotel_currency'] = "";
					$window.tc_vars['hotel_name'] = service.hotel.NOMBRE;
					$window.tc_vars['hotel_stars'] = service.hotel.ESTRELLAS;
					$window.tc_vars['hotel_url_picture'] = service.foto;
					$window.tc_vars['hotel_url_picture_2'] = "https://www.riu.com/images/hotels/" + service.hotel.ID_RUMBO + ".jpg";
					$window.tc_vars['hotel_url_page'] = document.URL;
					$window.tc_vars['hotel_country'] = service.pais.ISO;
					$window.tc_vars['hotel_destination'] = service.destino.NAME;
					$window.tc_vars['env_template']= "product" ;
					$window.tc_vars['category_country']= service.pais.NAME;
					$window.tc_vars['category_destination']= service.destino.NAME;
					$window.tc_vars['hotel_type'] = service.hotel.CIUDAD == 'Si'?'plaza':'vacacional';
					$window.tc_vars['order_hotel_type'] = service.hotel.CIUDAD == 'Si'?'plaza':'vacacional';
					$window.tc_vars['search_hotel_type'] = service.hotel.CIUDAD == 'Si'?'plaza':'vacacional';
				}
				else if (tipo=='destino') {
					$window.tc_vars = {};						
					$window.tc_vars['env_template']= "destinations" ;
					$window.tc_vars['category_country']= service.pais.NAME;
					$window.tc_vars['category_destination_id']= service.destino.ID_UNICO;
					$window.tc_vars['category_destination']= service.destino.NAME;
				}
				if(window.innerWidth >= 992)
					$window.tc_vars['env_channel'] = "d";
				else
					$window.tc_vars['env_channel'] = "m";
				$window.tc_vars['user_id'] = service.user_id;
				$window.tc_vars['env_language']= constantes.idioma;
				$window.tc_vars['env_country']= service.geoip;
				$window.tc_vars['page_name']= document.URL;
				$window.tc_vars['user_country']= "";
				if (constantes.server.contains('riucom')) {
					$window.tc_vars['env_work'] = "preprod";
				}
				else {
					$window.tc_vars['env_work'] = "prod";
				}
				console.log($window.tc_vars);
				if($window.tc_vars['page_name'] == 'confirmation' ) {
					$.getScript( constantes.serverS + "/js/tc_Riucom_3.js", function( data, textStatus, jqxhr ) {});
				}		
				else {
					$.getScript( constantes.serverS + "/js/tc_Riucom_1.js", function( data, textStatus, jqxhr ) {});
				}
			}
		return service;
	});
	app.component("tagComander", {
		//templateUrl:  function(constantes) { return "/"+constantes.idioma+"/riu-class/templates/cmp-tag-comander.jsp"; },
		bindings : { country:'@', idrc:'@', template:'@'},
		controller: ctrlTagCommander
	});
	ctrlTagCommander.$inject = ['serviceTC', '$scope', '$http', '$window', 'riuService', 'riuClassSession','$sce' , 'constantes', '$rootElement'];
function ctrlTagCommander(serviceTC, $scope, $http, $window, riuService, riuClassSession, $sce, constantes, $rootElement) {
	serviceTC.geoip = $scope.$ctrl.country;
	serviceTC.user_id = $scope.$ctrl.idrc;
	$window.tc_vars = {};
	//console.log($scope.$ctrl.template);
	$scope.$on("SessionUpdated",function(){
		$scope.RC=riuClassSession.riuclass;
		if ($scope.RC)
			$window.tc_vars['user_points']= $scope.RC.ptosDisponible;
		if ($scope.$ctrl.template == 'HOME') {
			$window.tc_vars['env_template']= 'homepage';
			serviceTC.setTC('');
		}
		else if ($scope.$ctrl.template == 'LANDING_OFERTAS' || $scope.$ctrl.template == 'LANDING_MANUAL' || $scope.$ctrl.template == 'LANDING_NUEVAS_APERTURAS') {
			$window.tc_vars['env_template']= 'landing';
			serviceTC.setTC('');
		}
		else if ($scope.$ctrl.template == 'FICHA_HOTEL') {
			/* no hacemos nada ya se encarga el controller de la ficha del hotel */
		} 
		else if ($scope.$ctrl.template == 'FICHA_DESTINO') {
			/* no hacemos nada ya se encarga el controller de la ficha de destino */
		} 
		else if ($scope.$ctrl.template == 'BOOKING_RESULT' || $scope.$ctrl.template == 'BOOKING_FORM' || $scope.$ctrl.template == 'BOOKING_CONFIRM' ) {
			/* no hacemos nada ya se encarga el controller del proceso de reserva  */
		} 
		else {
			$window.tc_vars['env_template']= 'other_generic';
			serviceTC.setTC('');		
		}
	});
}


app.factory('serviceNewsletter', function($http, $q, riuService, constantes){
	var emailNL = "";
	var comboOptPais = null; 
	var popupActual = null;
	return  {
		getDestinos: function() {
			var url = constantes.serverS + "/ofertas!getOfertasHome.action?formato=json&v=web&tipo=home&conPromociones=true&idioma="+constantes.idioma+"&request.aspect=desk";
			var defer = $q.defer();
			$http.get(url, {withCredentials: true}).success(function(data)
			{
				defer.resolve(data);
			}).error(function(data, status, headers, config) 
			{
			});
			return defer.promise;
		},
		getEmailNL : function(){
			return emailNL;
		},
		setEmailNL : function(v){
			emailNL = v;
		},
		getComboOptPais : function(){
			return comboOptPais;
		},
		setComboOptPais : function(v){
			comboOptPais = v;
		},
		getPopupActual : function(){
			return popupActual;
		},
		setPopupActual : function(v){
			popupActual = v;
		},
		cerrarTostada : function(ck){
			$('.close-tostada').parents('.tostada-suscripcion').hide(); 
			$('.close-tostada').parents('.ui-dialog').find('.ui-dialog-titlebar-close ').click();
	        riuService.setCookie(ck, 168, '/', 1);
	        return false;
	    },
		suscripcionNewsletter:function(frm, varNewLetter){
			if (frm.$valid) {
				var url = constantes.serverS + "/newsletter!suscripcion.action?formato=json";
				var defer = $q.defer();
				$http.get(url, {params: { 
									origen:'_normal',
									name: varNewLetter.name,
									surname: varNewLetter.surname,
									email: varNewLetter.emailNLPopup,
									country: varNewLetter.pais,
									province: varNewLetter.provincia.value 
								}
				}).success(function(data)
				{
					defer.resolve(data);
				}).error(function(data, status, headers, config) 
				{
				});
				return defer.promise;
			}
			return false;
		}
	}
});
app.component("newsletterFooter", {
	templateUrl: function(constantes) { return "/"+constantes.idioma+constantes.templateFolder+"/cmp-newsletter-footer.jsp?request.aspect=desk"; },
	bindings : { geoip : '@', classId : '@' },
	controller: ctrlNewsletter
});
app.component("newsletterPopupToast", {
	templateUrl: function(constantes) { return "/"+constantes.idioma+constantes.templateFolder+"/cmp-newsletter-popup-toast.jsp?request.aspect=desk"; },
	bindings : { geoip : '@', classId : '@' },
	controller: ctrlNewsletterPopupToast
});
app.component("nyPopupToast", {
	templateUrl: function(constantes) { return "/"+constantes.idioma+constantes.templateFolder+"/cmp-ny-popup-toast.jsp?request.aspect=desk"; }, 
	bindings : { ck : '@'},
	controller: ctrlNewsletter
});
ctrlNewsletter.$inject = ['$scope', 'serviceNewsletter', 'ngDialog', 'riuService'];
ctrlNewsletterPopupToast.$inject = ['serviceTC', '$scope', 'serviceNewsletter', 'ngDialog', '$q', 'riuService'];
function ctrlNewsletter($scope,  serviceNewsletter, ngDialog, riuService) {
	$scope.ck = "tostadaCerrada";
	if($scope.$ctrl && $scope.$ctrl.ck)
		$scope.ck = $scope.$ctrl.ck;
	/*
	$(window).scroll(function() {    
		var scrollHeight = $(document).height();
		var scrollPosition = $(window).height() + $(window).scrollTop();
	    var cookieTC = riuService.getCookie($scope.ck);
	    if ((scrollHeight - scrollPosition) / scrollHeight === 0 && cookieTC != true ) {
		    // when scroll to bottom of the page
		    $(".tostada-suscripcion").addClass("active");
	    } else {
			//console.log('no tostada');
			$(".tostada-suscripcion").removeClass("active");
	    }
	});
	*/
	$scope.emailNL = "";
	$scope.popupActual = null;
	serviceNewsletter.setPopupActual(null);
	$scope.showNLPopup = function() {
		serviceNewsletter.setEmailNL($scope.emailNL);
		$scope.popupActual = ngDialog.open({
						template: '\
							 <newsletter-popup-toast geoip="{{$ctrl.geoip}}" classId="{{$ctrl.classId}}">\
							</newsletter-popup-toast>',
						plain : true, scope: $scope
				});	
		serviceNewsletter.setPopupActual($scope.popupActual);
		$('.messageSuccess').addClass('hide');
	}
	$scope.abrirInfo = function(ruta) {
		 return ngDialog.open({ template: ruta, className: 'ngdialog-theme-default' });
	}
	$scope.showPoliticas = function() {
		riuService.showPoliticas();
	}
	$scope.showTerminos = function() {
		riuService.showTerminos();
	}	
	$scope.cerrarTostada = function(){
		serviceNewsletter.cerrarTostada($scope.ck);
	}
}
function ctrlNewsletterPopupToast(serviceTC, $scope, serviceNewsletter, ngDialog, $q, riuService) {
	$scope.newsLetter = [];
	$scope.newsLetter.emailNLPopup = serviceNewsletter.getEmailNL();
	$scope.showToast = false;
	$scope.ck = "tostadaCerrada";
	//if($scope.$ctrl && $scope.$ctrl.ck)
	//	$scope.ck = $scope.$ctrl.ck;
	$(window).scroll(function() {    
		var scrollHeight = $(document).height();
		var scrollPosition = parseInt($(window).height() + $(window).scrollTop());
	    var cookieTC = riuService.getCookie($scope.ck);
	    var divTostada = $(".tostada-suscripcion");
		if (angular.isUndefined(cookieTC)) {cookieTC = null;}
		$scope.showToast = ((scrollHeight - scrollPosition) / scrollHeight === 0 && cookieTC != true );
	    if ((scrollHeight - scrollPosition) / scrollHeight === 0 && cookieTC != true ) {
		    // when scroll to bottom of the page
		    divTostada.addClass("active");
	    } else {
			//console.log('no tostada');
			if (!divTostada.hasClass('tostada-no-scroll')) {
				divTostada.removeClass("active");
		    }
		    // $(".tostada-suscripcion").removeClass("active");
	    }
	});
	$scope.loadProvinciasPais = function (pais, provincia) {
		var defer = $q.defer();
		if (angular.isUndefined(provincia)) {
			provincia = "";
		}
		riuService.getProvinciasPaisList(pais).then(function(d) {
			$scope.provincias=d;
			var sel = "";
			for(var i = 0; i < $scope.provincias.length; i++) {
				$scope.provincias[i].value = $scope.provincias[i].value.split("#")[0];
				if (provincia.toUpperCase()==$scope.provincias[i].label.toUpperCase()) {
					sel = $scope.provincias[i].value ;
				}
			}
			defer.resolve(d);
		});	
		return defer.promise;		
	}
	$scope.loadProvinciasPais($scope.$ctrl.geoip, "").then(function(d) {
		$scope.provincias = d;
		$scope.paises = serviceNewsletter.getComboOptPais(); 
		if(!$scope.paises){
			$q.all([riuService.getPaisesList()]).then(function(data){
				$scope.paises = data[0];
				serviceNewsletter.setComboOptPais(data[0]);
				$scope.newsLetter.pais = $scope.$ctrl.geoip;
			});	
		}else{
			$scope.newsLetter.pais = $scope.$ctrl.geoip;
		}
	});
	$scope.suscripcionNL = function (){
		$('.msgErrAlert').empty();
		if ($scope.registrarNews.$valid) {
			$('.ngdialog-theme-loading').removeClass('hide');
			serviceNewsletter.suscripcionNewsletter($scope.registrarNews, $scope.newsLetter).then(function(data){
				$('.ngdialog-theme-loading').addClass('hide');
				if (data.errorID == null && data.classNameExceptionJson == null){
					$(".registrarE").hide();
				    $(".registrarNews").hide();
				    $(".messageSuccess").show();
				    /*//que hacer con esa funcion??!!
				     if (typeof sendNewsletterConfirmationTC !== 'undefined' && $.isFunction( sendNewsletterConfirmationTC )) {
				    	   // llamada a la funcion de TAG Commander
				    	   sendNewsletterConfirmationTC();
				    }*/
				    $(".messageSuccess .sa-icon").addClass('animate');
					$(".messageSuccess .sa-tip").addClass('animateSuccessTip');
					$(".messageSuccess .sa-long").addClass('animateSuccessLong');
					riuService.setCookie($scope.ck, 720, '/', 1);
					serviceTC.setTC('newsletter');
				}else if(data.errorID){
					if (data.errorID == 'contacto-existente') {
			        	$(".registrarE").html("");
			        	$(".registrarNews .email").addClass("has-error");
			        	$(".registrarNews .email").find(".help-block.with-errors").html($(document).data('etiqueta-contacto-existente'));
			        }else
						$('.msgErrAlert').html(data.errorMensaje);
				}
			});
		}
	}
	$scope.showPoliticas = function() {
		riuService.showPoliticas();
	}
	$scope.showTerminos = function() {
		riuService.showTerminos();
	}	
	$scope.abrirInfo = function(ruta) {
		 return ngDialog.open({ template: ruta, className: 'ngdialog-theme-default' });
	}
	$scope.cerrarTostada = function(){
		serviceNewsletter.cerrarTostada($scope.ck);
		if(serviceNewsletter.getPopupActual())
			serviceNewsletter.getPopupActual().close();
	}
}


app.component("historico", {
	bindings : { href:'@'},
	controller: ctrlHistorico
});
app.controller("ctrlHistorico", ["$scope", "constantes", "$location", ctrlHistorico])
function ctrlHistorico($scope,  constantes,  $location ) {
	$scope.createHistoryBack = function (act, ant){
		if(window.history.length == 1 && ant!='null'){
			window.history.pushState('', '', act);
			$(window).on('popstate', function() {
				var hashLocation = location.hash;
				var hashSplit = hashLocation.split("#!/");
				var hashName = hashSplit && hashSplit[1]?hashSplit[1]:'';
				var lastAlmoadilla =  location.href.substring(location.href.length - 1, location.href.length)=='#'?true:false;
				if (hashName !== '' || !lastAlmoadilla) {
				  var hash = window.location.hash;
				  if (hash === '') {
					  window.location.replace(ant);
				  }
				}			    	
			});	
		}
	}
	if (window.history && window.history.pushState) {
		$scope.createHistoryBack(window.location.href, $scope.$ctrl.href);
	}
}
app.controller("ctrlFooter", ["$scope", "riuclassService", "riuService", "riuClassSession", "$cookies", "$cookieStore", "constantes", "ngDialog", "$location", ctrlFooter])
function ctrlFooter($scope, riuclassService, riuService, riuClassSession, $cookies, $cookieStore, constantes, ngDialog, $location ) {
	$scope.moneteInfo = null;
	let showProductoActivo = $cookies.get('showPA');
	if(!$scope.moneteInfo && (!showProductoActivo || showProductoActivo!= "1")){
		riuService.adsBlocked().then((res)=>{
						console.log('infoMonete', res);
						if (res.data && res.data.data && res.data.data.responses && res.data.data.responses.length > 0){
							riuService.SetDatalayerMoneteInfo(res.data.data.responses);
							var r = res.data.data.responses;
							var encontrado = false;
							var objMonete = null;
							for(var i = 0; i < r.length; i++){
								var resp = r[i];
								if(resp.actions && resp.actions.length > 0){
									for(var j = 0; j < resp.actions.length; j++){
										var act = resp.actions[j];
										if(act.json && act.json.exp && act.json.exp == 'ProductoActivo'){
											$scope.moneteInfo = act.json;
											if(act.json.variante == 'Experiment'){
												encontrado = true;
												objMonete = act.json;
												break;
											}
										}
									}
								}
							}
							if(encontrado){							
								let conteo = 0
								intervalPromise = setInterval(()=>{ 
									if(conteo < 10){
										conteo = conteo + 1;
									}else{
										clearInterval(intervalPromise);
									}
									if(window.dataLayer){
										var obj = window.dataLayer.filter((e)=>{return e.event == 'showPopupApp'});
											date=new Date();
											date.setTime(date.getTime()+(730*24*60*60*1000));
											expires="; expires="+date.toGMTString();
											document.cookie="showPA=1"+expires+"; path=/"
											$scope.title = obj && obj[0]?obj[0].nombreHotelPopupApp:'';
											$scope.descripcion = 'd.descripcion';
											ngDialog.open({	template: 'popupProductoActivo', scope: $scope, className: 'ngdialog-theme-default modal-app' });
											clearInterval(intervalPromise);
									}
								}, 1000);
							}	
						}					
					});
	}
	$scope.mostrarCookie = $cookies.get('fp_cookieWarningSeen');
	$scope.writeCookie = function(b){
		date=new Date();
		date.setTime(date.getTime()+(730*24*60*60*1000));
		expires="; expires="+date.toGMTString();
		document.cookie="fp_cookieWarningSeen="+b+expires+"; path=/"
	}
	$scope.aceptarCookies = function() {
		$scope.writeCookie(1);
		$scope.mostrarCookie = 1;
	}
	$scope.abrirInfoCookie = function() {
		// return ngDialog.open({ template:'/'+ constantes.idioma +'/PaginasFinales/cookies_popup.jsp#cookies', className: 'ngdialog-theme-default' });
 		riuService.showPoliticasCookies();
	}
	$scope.abrirInfo = function(ruta) {
		return ngDialog.open({ template: ruta, className: 'ngdialog-theme-default' });
	}
	$scope.showPoliticas = function() {
		riuService.showPoliticas();
	}
	$scope.showTerminos = function() {
		riuService.showTerminos();
	}
	$scope.goPolCookies = function() {
		riuService.goPolCookies();
	} 	
	$scope.showPopupLoginRC = function() {
		$scope.popup = riuclassService.showPopupLogin(/*$location.absUrl()*/ "");
	}
	$scope.$on('SessionUpdated', function() {
        $scope.RC = riuClassSession.riuclass;
		//$scope.config = riuClassSession.config;
		//console.log($scope.RC);
		//console.log($scope.config);
	});
	$scope.sendOpcionesMenuRC = function(p){
		if(p == 'MR')
			riuclassService.sendReservasRedirectRC();
		if(p == 'MP')
			riuclassService.sendMisPuntosRedirectRC();
		if(p == 'MC')
			riuclassService.sendConsultasRedirectRC();
		if(p == 'MD')
			riuclassService.sendMisDatosRedirectRC();
	}
}


app.component("loginHeaderRc", {
	templateUrl: function(constantes) { return  "/"+constantes.idioma + constantes.templateFolder + "/cmp-header-login.jsp?request.aspect=desk"; },  
	controller: ctrlLoginRC
});
app.component("loginSidebarRc", {
templateUrl: function(constantes) { return "/"+constantes.idioma + constantes.templateFolder + "/cmp-sidebar-login.jsp?request.aspect=desk"; },
controller: ctrlLoginRC
});
ctrlLoginRC.$inject = ['$scope', '$http', 'constantes', 'riuclassService', '$rootScope', '$window', 'ngDialog', '$location', 'riuClassSession', 'riuService'];
/* Controller principal */
function ctrlLoginRC($scope, $http, constantes, riuclassService, $rootScope, $window, ngDialog, $location, riuClassSession, riuService) {
	$scope.usr = "";
	$scope.psw = "";
	$scope.FormUsr={usr:'', psw:'', url:''};
	$scope.descripcion = 'dsdsads';
	$scope.modificarPassRcForm = [];
	$scope.errorChangePass;
	$scope.etiquetas=[];
	$scope.login = function() {
	    if ($scope.frm.$valid) {
			//var m = riuclassService.showLoadingMsg();
			document.cookie = "rcWP=;expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;; path=/";
			riuclassService.setLoginRC($scope.FormUsr.usr, $scope.FormUsr.psw).then(function(d) {			
			//	riuclassService.getEtiquetas( 'error.login_incorrecto' ).then(function(etiquetas) {
					var msg = $rootScope.config["error.login_incorrecto"];
					if (!riuclassService.wsError(d, msg))
					{
						/*$scope.$on('ReloadPage', function(event, args) {
							$window.location.reload();
						});*/
						if($scope.FormUsr.psw.length < 6)
							document.cookie = "rcWP=true; path=/";
						$rootScope.$broadcast("ReloadSession", {
				                reload: true, url : ""
				        });
					}
					//m.close();
			//	});
			});
		}
  	}
    $scope.logout = function() {
    	var str = window.location.href; 
    	riuclassService.setLogoutRC().then(function(d) {
    	    	document.cookie = "rcWP=;expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;; path=/";
			if(window.location.href.indexOf(constantes.privateFolder) > -1) {
				// Pagina privada
				$window.location = "/";
			} else if(str.indexOf('valorar-reserva') > 0){
				window.history.back();
			} else {
				// Pagina publica
				$window.location.reload();
			}
        });
    }
	$scope.$on('SessionUpdated', function() {
        $scope.riuClassDatosSession = riuClassSession.riuclass;
        setTimeout(()=>{
        	if($scope.riuClassDatosSession && document.cookie.indexOf('rcWP') > 0 && $rootScope.swiPopupRCWP == undefined){
        	        $window.dataLayer.push({'event' : 'forceChangePass'});
	        	ngDialog.open({	template: 'tmpRcWP', scope: $scope, 
	        		className: 'ngdialog-theme-default update-modal', 
	        		closeByDocument: false, 
        			closeByEscape: false,
        			closeByNavigation : false,
        			showClose: false,
        		});
	        	$rootScope.swiPopupRCWP = true;
	        }
        },200)
		$scope.config = $rootScope.config;
	});
	$scope.sendOpcionesMenuRC = function(p){
		if(p == 'MR')
			riuclassService.sendReservasRedirectRC();
		if(p == 'MP')
			riuclassService.sendMisPuntosRedirectRC();
		if(p == 'MC')
			riuclassService.sendConsultasRedirectRC();
		if(p == 'MD')
			riuclassService.sendMisDatosRedirectRC();
	}
	$scope.cambioPassword = function(){
		if ($scope.modificarPassRcForm['oldPwd'] && $scope.modificarPassRcForm['pwdRepetido'] && $scope.modificarPassRcForm['pwd'] && $scope.modificarPassRcForm['pwd'].length >= 6) {
			if ($scope.modificarPassRcForm['pwd'] != $scope.modificarPassRcForm['pwdRepetido']) 
			{
				riuService.showErrorMsg($scope.etiquetas['modificar_password.contrasenas_igules'] + ". " +  $scope.etiquetas['registro_usuario.descPassword'] );
				return false;
			}
			riuclassService.setCambioPassword($scope.modificarPassRcForm).then((d)=> {
				var msg = $scope.etiquetas["modificar_password.error_modificacion"];
				if (!riuclassService.wsError(d, msg))
				{
					$window.dataLayer.push({'event' : 'forceChangePass', 'result': 'OK'})
					document.cookie = "rcWP=;expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;; path=/";
					riuclassService.showInfoMsg($scope.etiquetas['modificarPasswordRcForm_ok'], ()=> { } );
					setTimeout(()=> {ngDialog.closeAll()})
				}else{
					$window.dataLayer.push({'event' : 'forceChangePass', 'result': 'FAILED', 'reason':d})
				}
			});		
		}
	};
	let etiquetasBusqueda = 'modificarPasswordRcForm_ok,modificar_password.error_modificacion,modificar_password.contrasenas_igules,registro_usuario.descPassword';
	riuService.getEtiquetas(etiquetasBusqueda).then((data)=>{
		$scope.etiquetas = data;
	});
	$scope.sendContrasenaRedirectRC = function() {
		riuclassService.sendContrasenaRedirectRC();
	}
	$scope.sendHeOlvidadoRedirectRC = function() {
		riuclassService.sendFAQSRedirectRC("id=002_002_053");
	}
$scope.toggleOptionsRcSidebar = function() {
$(".with-login .sections-user").toggleClass('open');
}
$scope.toggleSidebar = function() {
$('body').toggleClass('menu-open');
$('.menu-backdrop').toggleClass('in');
$(".navbar-toggle").toggleClass("active");
$("#navbar").toggleClass("small-screen-active");
}
$scope.toggleLoginRcSidebar = function() {
$(".without-login .sections-user").toggleClass('open');
}
}


